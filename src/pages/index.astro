---
import Layout from '../layouts/Layout.astro'
import Heading from '../components/Heading.astro'
import { Code } from 'astro/components';
import Toggle from '../components/ThemeToggler.astro';

---

<Layout title="Tailwind Tricks">
	<div class="bg-red-600 text-black font-bold w-full top-0 left-0 text-center p-4 hidden lg:fixed lg:block">
		Novedad: 'text-wrap: balance' y 'has' tienen un mayor soporte en los navegadores principales  üöÄ
	</div>

	<header class="flex flex-col items-center justify-center mx-auto md:flex-row md:justify-between md:items-start my-12 w-full py-6">
		<figure class="mx-auto w-full flex flex-col items-center md:items-start">
			<img width="300" height="250" src="./logo.png" alt="Logo Tailwind Tricks" />
			<figcaption class="my-4 text-md">
				<Heading variant="h1" title="Cosas que igual no sab√≠as de Tailwind" />
			</figcaption>
		</figure>

		<Toggle />
	</header>
	<main>

		<section aria-label="Novedad con selector has">

			<Heading variant="h2" title="Novedad: 'has' ha sido aceptado por todos los navegadores principales (>90% compatibilidad)" />

			<p>La propiedad <code>has</code> ha sido aceptada por todos los navegadores principales, por lo que ya podemos utilizarla sin miedo. Esta propiedad nos permite estilar el parent dependiendo de lo que pase en uno de los children. Por ejemplo, podemos estilar el <code>label</code> de un <code>input</code> cuando el <code>input</code> est√° <code>checked</code> como veremos en uno de los ejemplos m√°s abajo, pero hay m√°s.</p>

			<Code code={`
<div class="[&:has(h3)]:border [&:has(h3)]:p-4">
	<h3>Esto es un h3</h3>
	<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloribus quod dignissimos, cupiditate et doloremque quam ipsa similique! Aut aliquam odit suscipit vel quaerat magnam architecto necessitatibus ad nulla! Possimus, error?</p>
</div>
<div class="[&:has(h3)]:border">
	<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloribus quod dignissimos, cupiditate et doloremque quam ipsa similique! Aut aliquam odit suscipit vel quaerat magnam architecto necessitatibus ad nulla! Possimus, error?</p>
</div>
								`} lang="js" theme="one-dark-pro"  />

								<p>Esto nos dar√° algo como lo siguiente.</p>

			<div class="[&:has(h3)]:border [&:has(h3)]:p-4">
				<h3>Esto es un h3</h3>
				<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloribus quod dignissimos, cupiditate et doloremque quam ipsa similique! Aut aliquam odit suscipit vel quaerat magnam architecto necessitatibus ad nulla! Possimus, error?</p>
			</div>
			<div class="[&:has(h3)]:border">
				<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloribus quod dignissimos, cupiditate et doloremque quam ipsa similique! Aut aliquam odit suscipit vel quaerat magnam architecto necessitatibus ad nulla! Possimus, error?</p>
			</div>

		</section>

		<hr>
		
		<section aria-label="Propiedades peer y accent-color">

			<Heading variant="h2" title="1. Propiedades 'peer:' y 'accent-color'" />

			<p>Aqu√≠ podr√≠amos hablar de la propiedad <code>peer</code> con la que podemos hacer algo dependiendo del estado del elemento hermano (sibling). En este caso f√≠jate c√≥mo a√±adimos la negrita al contenido del <code>div</code> si el input est√° <code>checked</code>. Tambi√©n, es interesante comentar lo que hace la propiedad <code>accent-color</code> para estilar el los input de type="radio" o type="checkbox" por ejemplo.</p>

			<fieldset class="accent-purple-600 my-6">
				<legend class="text-md font-semibold mb-2">¬øConoc√≠as esto de Tailwind CSS?</legend>
				<label class="flex gap-2">
					<input
						checked
						type="radio"
						name="option"
						id="yes"
						class="peer"
					/>
					<div class="peer-checked:font-bold">S√≠</div>
				</label>
				<label class="flex gap-2">
					<input
						type="radio"
						name="option"
						id="no"
						class="peer"
					/>
					<div class="peer-checked:font-bold">No</div>
				</label>
				<label class="flex gap-2">
					<input
						type="radio"
						name="option"
						id="maybe"
						class="peer"
					/>
					<div class="peer-checked:font-bold">Me sonaba...</div>
				</label>
			</fieldset>

			<fieldset class="accent-purple-600 my-4">
				<legend class="text-md font-semibold mb-2">Lista de la compra</legend>
				<div class="flex gap-2 items-center">
					<input type="checkbox" name="coke" id="coke" checked />
					<label for="coke">Coca Cola Zero</label>
				</div>
				<div class="flex gap-2 items-center">
					<input type="checkbox" name="bread" id="bread" checked />
					<label for="bread">Pan para el desayuno</label>
				</div>
				<div class="flex gap-2 items-center">
					<input type="checkbox" name="hummus" id="hummus" />
					<label for="hummus">Hummus</label>
				</div>
			</fieldset>

			<Code code={`
		<fieldset class="accent-purple-600 my-6">
			<legend class="text-md font-semibold mb-2">¬øConoc√≠as esto de Tailwind CSS?</legend>
			<label class="flex gap-2">
				<input checked type="radio" name="option" id="yes" class="peer" />
				<div class="peer-checked:font-bold">S√≠</div>
			</label>
			<label class="flex gap-2">
				<input type="radio" name="option" id="no" class="peer" />
				<div class="peer-checked:font-bold">No</div>
			</label>
			<label class="flex gap-2">
				<input type="radio" name="option" id="maybe" class="peer" />
				<div class="peer-checked:font-bold">Me sonaba...</div>
			</label>
		</fieldset>

		<fieldset class="accent-purple-600 my-4">
			<legend class="text-md font-semibold mb-2">Lista de la compra</legend>
			<div class="flex gap-2 items-center">
				<input type="checkbox" name="coke" id="coke" checked />
				<label for="coke">Coca Cola Zero</label>
			</div>
			<div class="flex gap-2 items-center">
				<input type="checkbox" name="bread" id="bread" checked />
				<label for="bread">Pan para el desayuno</label>
			</div>
			<div class="flex gap-2 items-center">
				<input type="checkbox" name="hummus" id="hummus" />
				<label for="hummus">Hummus</label>
			</div>
		</fieldset>
						`} lang="js" theme="one-dark-pro"  />


			<p>Tambi√©n podr√≠amos usar <code>peer</code>para hacer unas cuantas validaciones de imputs en el Frontend (pero recuerda que esto no debe sustituir sino complementar a la validaci√≥n desde el servidor)</p>

			<div class="my-12 p-4 bg-black">
				<form class="shadow-lg rounded-md p-5 md:p-10 flex flex-col w-11/12 max-w-lg group gap-6" novalidate>

					<label for="email">
						<div class="text-white mb-5">Email</div>
						<input
						type="email"
						name="email"
						id="email"
						class="invalid:[&:not(:placeholder-shown):not(:focus)]:outline-red-500 invalid:[&:not(:placeholder-shown):not(:focus)]:outline peer w-full py-2 px-3 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
						placeholder=" "
						required
						pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
						/>
						<span class="mt-2 hidden text-sm text-red-500 peer-[&:not(:placeholder-shown):not(:focus):invalid]:block">
							Please enter a valid email address
						</span>
				  	</label>
				  	<label for="password">
						<div class="text-white mb-5">Password</div>
						<input
						type="password"
						name="password"
						id="password"
						class="invalid:[&:not(:placeholder-shown):not(:focus)]:outline-red-500 invalid:[&:not(:placeholder-shown):not(:focus)]:outline peer w-full py-2 px-3 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
						placeholder=" "
						required
						pattern=".{7,}"
						/>
						<span class="mt-2 hidden text-sm text-red-500 peer-[&:not(:placeholder-shown):not(:focus):invalid]:block">
							Please enter a valid password with a minimum of 7 characters
						</span>
				  	</label>
		
					<button type="submit" class="text-white group-invalid:pointer-events-none group-invalid:opacity-30 border border-white py-2 my-3">Submit</button>
				</form>
			</div>

			<Code code={`
<div class="p-4 bg-black">
	<form class="shadow-lg rounded-md p-5 md:p-10 flex flex-col w-11/12 max-w-lg group gap-6" novalidate>

		<label for="email">
			<div class="text-white mb-5">Email</div>
			<input
			type="email"
			name="email"
			id="email"
			class="invalid:[&:not(:placeholder-shown):not(:focus)]:outline-red-500 invalid:[&:not(:placeholder-shown):not(:focus)]:outline peer w-full py-2 px-3 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
			placeholder=" "
			required
			pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
			/>
			<span class="mt-2 hidden text-sm text-red-500 peer-[&:not(:placeholder-shown):not(:focus):invalid]:block">
				Please enter a valid email address
			</span>
		</label>
		<label for="password">
			<div class="text-white mb-5">Password</div>
			<input
			type="password"
			name="password"
			id="password"
			class="invalid:[&:not(:placeholder-shown):not(:focus)]:outline-red-500 invalid:[&:not(:placeholder-shown):not(:focus)]:outline peer w-full py-2 px-3 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
			placeholder=" "
			required
			pattern=".{7,}"
			/>
			<span class="mt-2 hidden text-sm text-red-500 peer-[&:not(:placeholder-shown):not(:focus):invalid]:block">
				Please enter a valid password with a minimum of 7 characters
			</span>
		</label>

		<button type="submit" class="text-white group-invalid:pointer-events-none group-invalid:opacity-30 border border-white py-2 my-3">Submit</button>
	</form>
</div>
								`} lang="js" theme="one-dark-pro"  />

			

		</section>

		<section aria-label="Propiedades has y group">

			<Heading variant="h2" title="2. Propiedades 'group:' y 'has:'" />

			<p>Es cierto que por ahora podemos estilar el contenido de ciertos children al interactuar con el parent. A trav√©s de <code>group</code> podemos decir cu√°l va a ser el parent y luego hacer que algo suceda en hover o focus en alguno de los children, como es el caso del texto de la descripci√≥n de estas cards.</p>

			<fieldset class="my-6 accent-lime-600">
				<legend class="text-md font-semibold mb-2">¬øQu√© camino quieres emprender?</legend>
				<label for="frontend" class="flex items-start gap-x-4 bg-[var(--color-bg)] border border-black p-6 [&:has(:checked)]:bg-indigo-200 group my-3">	
					<div>
						<input class="checked:ring-white" type="radio" name="path" id="frontend" checked />
					</div>
					<div>
						<div class="font-semibold has-[:checked]:font-bold">Frontend</div>
						<div class="group-hover:text-gray-500 group-focus-within:text-gray-500">El camino de aquellos amantes de una buena UI y experiencia de usuario.</div>
					</div>
				</label>
				<label for="backend" class="flex items-start gap-x-4 bg-[var(--color-bg)] border border-black p-6 [&:has(:checked)]:bg-indigo-200 group my-3">	
					<div>
						<input class="checked:ring-white" type="radio" name="path" id="backend" />
					</div>
					<div>
						<div class="font-semibold has-[:checked]:font-bold">Backend</div>
						<div class="group-hover:text-gray-500 group-focus-within:text-gray-500">Tu elecci√≥n si te gusta la seguridad y robustez de unos datos bien mantenidos.</div>
					</div>
				</label>
				<label for="technical" class="flex items-start gap-x-4 bg-[var(--color-bg)] border border-black p-6 [&:has(:checked)]:bg-indigo-200 group my-3">	
					<div>
						<input class="checked:ring-white" type="radio" name="path" id="technical" />
					</div>
					<div>
						<div class="font-semibold has-[:checked]:font-bold">T√©cnico</div>
						<div class="group-hover:text-gray-500 group-focus-within:text-gray-500">Quiero hacer de las actualizaciones del AVAST una carrera profesional.</div>
					</div>
				</label>
			</fieldset>

			<p>Lo que va a ser genial y est√° todav√≠a en fase experimental, supongo porque Firefox todav√≠a no lo ha aceptado del todo a julio de 2023, es el uso de <code>has</code>, ya que vamos a poder hacer justo lo contrario: <strong>estilar al parent dependiendo de lo que pase en uno de los children</strong>. Aqu√≠ te lo dejo en el c√≥digo, pero te√≥ricamente una vez se aplique, la carta seleccionada podr√° tener un color de fondo.</p>

			<Code code={`
				
		<fieldset class="my-6 accent-lime-600">
			<legend class="text-md font-semibold mb-2">¬øQu√© camino quieres emprender?</legend>
			<label for="frontend" class="flex items-start gap-x-4 bg-[var(--color-bg)] border border-black p-6 [&:has(:checked)]:bg-indigo-200 group my-3">	
				<div>
					<input class="checked:ring-white" type="radio" name="path" id="frontend" checked />
				</div>
				<div>
					<div class="font-semibold has-[:checked]:font-bold">Frontend</div>
					<div class="group-hover:text-gray-500 group-focus-within:text-gray-500">El camino de aquellos amantes de una buena UI y experiencia de usuario.</div>
				</div>
			</label>
			<label for="backend" class="flex items-start gap-x-4 bg-[var(--color-bg)] border border-black p-6 [&:has(:checked)]:bg-indigo-200 group my-3">	
				<div>
					<input class="checked:ring-white" type="radio" name="path" id="backend" />
				</div>
				<div>
					<div class="font-semibold has-[:checked]:font-bold">Backend</div>
					<div class="group-hover:text-gray-500 group-focus-within:text-gray-500">Tu elecci√≥n si te gusta la seguridad y robustez de unos datos bien mantenidos.</div>
				</div>
			</label>
			<label for="technical" class="flex items-start gap-x-4 bg-[var(--color-bg)] border border-black p-6 [&:has(:checked)]:bg-indigo-200 group my-3">	
				<div>
					<input class="checked:ring-white" type="radio" name="path" id="technical" />
				</div>
				<div>
					<div class="font-semibold has-[:checked]:font-bold">T√©cnico</div>
					<div class="group-hover:text-gray-500 group-focus-within:text-gray-500">Quiero hacer de las actualizaciones del AVAST una carrera profesional.</div>
				</div>
			</label>
		</fieldset>
			`} lang="js" theme="one-dark-pro"  />

		</section>

		<section aria-label="Tama√±o fluido de text dependiendo del view port">

			<Heading variant="h2" title="3. Tama√±o de texto fluido" />

			<p>Queremos intentar no utilizar tantas media queries y utilizar el view port a nuestro favor para poder tener unos t√≠tulos la mar de responsive. Puedes comprobar lo que ocurre cuando intentas hacer un resize de esta p√°gina con los t√≠tulos.</p>

			<p>Para ello, hemos podido hacer:</p>

			<Code code={`
		{variant === 'h1' && <h1 class={\`text-[6.5vw] leading-none font-bold mb-4 \${extraClasses}\`}>{title}</h1>}
		{variant === 'h2' && <h2 class={\`text-[3vw] leading-none font-bold mb-4 \${extraClasses}\`}>{title}</h2>}
			`} lang="js" theme="one-dark-pro"  />
				

		</section>

		<section aria-label="Estilar dependiendo de la posici√≥n">

			<Heading variant="h2" title="4. Estilar dependiendo de la posici√≥n" />

			<p>Esta la sabes, pero muchas veces se nos olvida, y por eso no viene nada mal un buen recordatorio. Tenemos las clases para hacer <code>first:</code> <code>odd:</code> (posici√≥n impar), o <code>even:</code> (posici√≥n par) y poder crear una UI de la hostia. Incluso podemos hacer movidas para estilar solo los tres primeros elementos. Y todo solo con CSS/Tailwind, nada de JavaScript mirando index.</code></p>


			<div class="flex flex-wrap gap-2 my-4">
				{[...Array(7)].map((_) => (
					<div
						class="h-4 w-6 bg-white border border-black first:bg-red-200 last:bg-red-200"
					></div>
					))}
			</div>

			<div class="flex flex-wrap gap-2 my-4">
				{[...Array(7)].map((_) => (
					<div
						class="h-4 w-6 bg-white border border-black odd:bg-red-200"
					></div>
					))}
			</div>

			<div class="flex flex-wrap gap-2 my-4">
				{[...Array(7)].map((_) => (
					<div
						class="h-4 w-6 bg-white border border-black even:bg-red-200"
					></div>
					))}
			</div>

			<div class="flex flex-wrap gap-2 my-4 [&>*:nth-child(-n+3)]:bg-red-200">
				{[...Array(7)].map((_) => (
					<div
						class="h-4 w-6 bg-white border border-black"
					></div>
					))}
			</div>

			<Code code={`
		// Estila el primer y √∫ltimo elemento	
		<div class="flex flex-wrap gap-2 my-4">
			{[...Array(7)].map((_) => (
				<div class="h-4 w-6 bg-white border border-black first:bg-red-200 last:bg-red-200"></div>
			))}
		</div>

		// Estila los elementos impares
		<div class="flex flex-wrap gap-2 my-4">
			{[...Array(7)].map((_) => (
				<div class="h-4 w-6 bg-white border border-black odd:bg-red-200" ></div>
			))}
		</div>

		// Estila los elementos pares
		<div class="flex flex-wrap gap-2 my-4">
			{[...Array(7)].map((_) => (
				<div class="h-4 w-6 bg-white border border-black even:bg-red-200"></div>
			))}
		</div>

		// Estila los tres primeros elementos
		<div class="flex flex-wrap gap-2 my-4 [&>*:nth-child(-n+3)]:bg-red-200">
			{[...Array(7)].map((_) => (
				<div class="h-4 w-6 bg-white border border-black" ></div>
			))}
		</div>
		`} lang="js" theme="one-dark-pro"  />

		<p>Tambi√©n podemos crear layouts interesantes con grid de esta forma.</p>
					
		<div class="grid gap-4 my-4">
			{[...Array(3)].map((_) => (
				<div
				class="bg-[var(--color-bg)] border border-black first:sm:col-span-2 first:sm:row-span-2 first:sm:bg-red-200 first:sm:text-black p-4"
				>Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam reiciendis voluptatum voluptate non dolorum odit excepturi vero. Ut, dolores perspiciatis? Culpa ad aspernatur accusantium quis autem reprehenderit voluptatem, odit et!</div>
			))}
		</div>

		<Code code={`
		// Estila el primer elemento para ocupar todo el espacio
		<div class="grid gap-4 my-4">
			{[...Array(3)].map((_) => (
				<div
				class="bg-white border border-black first:sm:col-span-2 first:sm:row-span-2 first:sm:bg-red-200 p-4"
				>Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam reiciendis voluptatum voluptate non dolorum odit excepturi vero. Ut, dolores perspiciatis? Culpa ad aspernatur accusantium quis autem reprehenderit voluptatem, odit et!</div>
			))}
		</div>
			`} lang="js" theme="one-dark-pro"  />

		</section>

		<section aria-label="Container Queries">

			<Heading variant="h2" title="5. Container Queries" />

			<p>Por mucho que intentemos huir de ellas, las <code>container queries</code>  ya est√°n aqu√≠, y en verdad, tienen bastante sentido. Ech√©mosle un vistazo al siguiente componente en el que podemos hacer cambios dependiendo del espacio que ocupe. Por ahora hay que instalar el plugin <code>@tailwindcss/container-queries</code>, ¬°pero ojal√° se incorpore de forma nativa pronto!</p>

			<div class="grid gap-4 my-4 ">
				{[...Array(3)].map((_) => (
					<div class="@container bg-[var(--color-bg)] border border-black first:sm:col-span-2 first:sm:row-span-2 p-4">
						<div class="@lg:font-bold">Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam reiciendis voluptatum voluptate non dolorum odit excepturi vero. Ut, dolores perspiciatis? Culpa ad aspernatur accusantium quis autem reprehenderit voluptatem, odit et!</div>
						<figure class="hidden @xl:flex @xl:gap-2 @xl:items-center my-4">
							<img class="w-12 h-12 rounded-full object-cover" src="https://images.unsplash.com/photo-1568602471122-7832951cc4c5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80" alt="guy" />
							<figcaption class="flex flex-col">
								<span class="text-xs">Paco S√°nchez</span>
								<span class="text-xs">Entusiasta web</span>
							</figcaption>
						</figure>
					</div>
				))}
			</div>

			<Code code={`
		// El elemento m√°s grande desplegar√° la imagen y el nombre, adem√°s del texto en negrita
		<div class="grid gap-4 my-4 ">
			{[...Array(3)].map((_) => (
				<div class="@container bg-[var(--color-bg)] border border-black first:sm:col-span-2 first:sm:row-span-2 p-4">
					<div class="@lg:font-bold">Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam reiciendis voluptatum voluptate non dolorum odit excepturi vero. Ut, dolores perspiciatis? Culpa ad aspernatur accusantium quis autem reprehenderit voluptatem, odit et!</div>
					<figure class="hidden @xl:flex @xl:gap-2 @xl:items-center my-4">
						<img class="w-12 h-12 rounded-full object-cover" src="https://images.unsplash.com/photo-1568602471122-7832951cc4c5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80" alt="guy">
						<figcaption class="flex flex-col">
							<span class="text-xs">Paco S√°nchez</span>
							<span class="text-xs">Entusiasta web</span>
						</figcaption>
					</figure>
				</div>
			))}
		</div>

		`} lang="js" theme="one-dark-pro"  />

		</section>

		<section aria-label="Grid Masonry">

			<Heading variant="h2" title="6. Grid Masonry" />

			<p>Esto no necesita mucha descripci√≥n. Pronto vamos a poder ser capaces de utilizar la propiedad <code>grid-rows-[masonry]</code> para poder crear este tipo de layout de una forma sencilla. Fuera quebraderos de cabeza y librer√≠as externas. ¬°Vendr√° m√°s pronto que tarde!</p>

		</section>

		<section aria-label="Text Balance">

			<Heading variant="h2" title="7. Text Balance" />

			<p>Esto va a estar genial el d√≠a que est√© aceptado en todos los navegadores, ya que <strong>por el momento no es as√≠ ni en Safari ni en Chrome a julio de 2023</strong>. Se trata de una forma de distribuir el espacio del texto y hacer los saltos de l√≠nea de forma que el texto quede visualmente bien. Por el momento no funciona, pero llegar√°...</p>

			<h3 class="text-balance text-7xl text-center font-bold my-6">Este texto deber√≠a verse bien en las dos resoluciones</h3>

			<Code code={`
		<h3 class="text-balance text-4xl font-bold my-6">Este texto deber√≠a verse bien en las dos resoluciones</h3>
			`} lang="js" theme="one-dark-pro"  />



		</section>

		<section aria-label="Line clamp">

			<Heading variant="h2" title="8. M√°ximo n√∫mero de l√≠neas con line-clamp" />

			<p>La propiedad line-clamp en CSS es super√∫til cuando no queremos que el contenido exceda un cierto n√∫mero de l√≠neas para as√≠ mantener una est√©tica coherente y ordenada. Por ejemplo, supongamos que tenemos los siguientes elementos con nombres y direcciones de correo de las personas.</p>

			<ul class="flex flex-wrap gap-4">
				<li class="flex gap-2 border border-[--color-text] rounded-sm py-2 px-4 items-center w-[300px]">

					<img class="rounded-full w-16 h-16 min-w-[4rem] min-h-[4rem] object-cover" src="https://www.manuelsanchezweb.com/img/manuel-keyboard.svg" alt="manuel sanchez">

					<div class="flex flex-col gap-4">
						<div>
							<div>Manuel S√°nchez</div>
							<div class="text-xs">Creador de contenido</div>
						</div>
	
						<a class="text-xs" href="mailto:manuelsanweb@gmail.com">manuelsanweb@gmail.com</a>
					</div>
				
				</li>

				<li class="flex gap-2 border border-[--color-text] rounded-sm py-2 px-4 items-center w-[300px]">

					<img class="rounded-full w-16 h-16 min-w-[4rem] min-h-[4rem] object-cover" src="https://images.unsplash.com/photo-1531891437562-4301cf35b7e4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1064&q=80" alt="fernando von hildegaard von der Wohnung">

					<div class="flex flex-col gap-4">
						<div>
							<div class="line-clamp-1">Fernando von Hildegaard von der Wohnung</div>
							<div class="text-xs">Recursos Humanos</div>
						</div>
	
						<a class="text-xs line-clamp-1" href="mailto:manuelsanweb@gmail.com">fernandovonhildegaardamhafen@gmail.com</a>
					</div>
				
				</li>

			</ul>

		</section>

		<section aria-label="Gradient">

			<Heading variant="h2" title="9. Crear gradients con from, via y to" />

			<p>Como todos sabemos, los gradientes son una forma muy buena para darle vida y profundidad a los dise√±os. Son muy vers√°tiles: pueden ser sutiles o atrevidos, lineales o radiales, y pueden tener tantos colores como desees. Con Tailwind podemos controlar la direcci√≥n, los colores y las posiciones de los puntos de parada de los gradientes directamente desde las clases en el HTML.</p>

			<button class="mb-4 w-64 h-10 text-white bg-gradient-to-r from-blue-500 to-purple-500 hover:from-purple-500 hover:to-blue-500 transition duration-500 ease-in-out">
				Bot√≥n con gradiente
			  </button>

			  <Code code={`
	<button class="mb-4 w-64 h-10 text-white bg-gradient-to-r from-blue-500 to-purple-500 hover:from-purple-500 hover:to-blue-500 transition duration-500 ease-in-out">
		Bot√≥n con gradiente
	</button>
					
			`} lang="js" theme="one-dark-pro"  />

			<Heading variant="h3" title="Gradient lineal con 3 puntos" extraClasses='my-4' />

			<div class="w-full h-full bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 min-h-[300px] my-6"></div>


			<Code code={`
	<div class="w-full h-full bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 min-h-[300px] my-6"></div>
		
			`} lang="js" theme="one-dark-pro"  />

			<p>Si quieres profundizar en el tema, √©chale un vistazo <a target="_blank" rel="noopener noreferrer" href="https://tailwindcss.com/docs/gradient-color-stops">a esa parte de la documentaci√≥n en la p√°gina de TailwindCSS</a> , ya que se pueden hacer un mont√≥n de movidas como usar porcentajes para tener un control total de los intervalos de los gradientes.</p>

		</section>

		<section aria-label="Atajo para font-size y line-height">

			<Heading variant="h2" title="10. Atajo para font-size y line-height" />

			<p>Desde la versi√≥n 3.3 de TailwindCSS podemos utilizar un atajo para gestionar ambas propiedades al mismo tiempo. De forma que los dos siguientes pedazos de c√≥digo ser√≠an equivalentes.</p>

			<div class="text-6xl leading-normal mb-4">Heading con las dos propiedades (version 1)</div>
			<div class="text-6xl/normal" >Heading con las dos propiedades (version 2)</div>

			<Code code={`
	<div class="text-6xl leading-normal mb-4">Heading con las dos propiedades (version 1)</div>
	<div class="text-6xl/normal" >Heading con las dos propiedades (version 2)</div>
					
			`} lang="js" theme="one-dark-pro"  />

		</section>

	</main>

	<footer>
		Si te gusta el contenido que est√°s viendo, puedes seguirme en <a target="_blank" rel="nofollow noopener" title="Canal de YouTube de manuelsanchezweb" href="https://www.youtube.com/channel/UCX3IE_OjG20p_AwbX06YAEg">mi canal de YouTube</a> o <a href="https://www.manuelsanchezweb.com/" target="_blank" rel="nofollow noopener">abonarte a mi newsletter</a>, para estar al tanto de las novedades que voy publicando.
	</footer>
</Layout>